# Default values for yolo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  repoPrefix: "ecpaas-dockerhub.ddns.net"

replicaCount: 1

image:
  repository: yolo
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v4"

cmdstr: |
  python3 /root/code/app/main.py

requestGpu: true

https:
  enabled: false

service:
  type: NodePort
  http:
    protocol: TCP
    port: 8001
    nodeport: 32002
    name:  http

  session:
    enabled: false
    cfg:
      sessionAffinity: ClientIP
      sessionAffinityConfig:
        clientIP:
          timeoutSeconds: 600

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 1000m
    memory: 8Gi

  requests:
    cpu: 1000m
    memory: 8Gi

spread:
  enabled: true

## Autoscaling parameters
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
## @param autoscaling.enabled Enable Horizontal POD autoscaling
## @param autoscaling.minReplicas Minimum number of replicas
## @param autoscaling.maxReplicas Maximum number of replicas
## @param autoscaling.targetCPU Target CPU utilization percentage
## @param autoscaling.targetMemory Target Memory utilization percentage
##
## NOTE: need to install metrics server first to make hpa work
##       helm install bn-mx bitnami/metrics-server -n metrics \
##        --set "extraArgs={--kubelet-insecure-tls=true,--kubelet-preferred-address-types=InternalIP}"
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 2
  targetCPU: 10
  #targetMemory: 50

ingress:
  ## @param ingress.enabled Enable ingress record generation
  ##
  enabled: true

  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## You can:
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false

  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates
  ##                           generated by Helm
  ##
  selfSigned: false

  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: example.com

nodeSelector: {}

tolerations: []

affinity: {}

